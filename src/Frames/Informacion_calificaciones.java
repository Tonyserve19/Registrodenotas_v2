
/* To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Clases.Conectar;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;

/**
 *
 * @author USUARIO
 */
public class Informacion_calificaciones extends javax.swing.JFrame {

    /**
     * Creates new form Informacion_calificaciones
     */
    int idalumno=0;
    int idcalifa=0;
    String nombre_alumno="";
    
    
    
    public Informacion_calificaciones() {
        initComponents();
        //cerrar();
        //TextPrompt tipo=new TextPrompt("Actualiza tipo",txttipo);
        //TextPrompt calificacion=new TextPrompt("Actualiza calificacion",txtcalificacion);
         
        this.setLocationRelativeTo(null);
        txtnombre.setEditable(false);
        
        idcalifa=Informacion_alumnos.idcalificacion;
        idalumno=Gestionar_alumnos.idalumno;
        try {
            
            PreparedStatement ps=cn.prepareStatement("SELECT nombre FROM alumnos WHERE id_alumno='"+idalumno+"'");
            ResultSet rs=ps.executeQuery();
            
            if(rs.next()){
                nombre_alumno=rs.getString("nombre");
            }
            
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"Error al consultar alumno");
        }
        ///////////////////////////////////////////////////////////////////////////////
        
        try {
            
                PreparedStatement ps=cn.prepareStatement("SELECT notas.tipo, notas.calificacion FROM notas INNER JOIN alumnos ON notas.id_alumno_nota=alumnos.id_alumno WHERE notas.id_nota='"+idcalifa+"'");
                ResultSet rs=ps.executeQuery();
                
                if(rs.next()){
                    cbxtipo.setSelectedItem(rs.getString("notas.tipo"));
                    txtcalificacion.setText(rs.getString("notas.calificacion"));
                    
                }
            
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"Error al consultar la nota");
        }
        
        txtnombre.setText(nombre_alumno);
        ////////////////////////////////////////////////////
        DefaultTableModel modelo=new DefaultTableModel();
        modelo.addColumn("Id nota");
        modelo.addColumn("Tipo");
        modelo.addColumn("Calificacion");
        tabla_informacion_calificaciones.setModel(modelo);
        
        String sql="SELECT id_nota,tipo,calificacion FROM notas WHERE id_alumno_nota='"+idalumno+"'";
        
        String datos[]=new String[3];
        
        Statement st;
        
        try {
            
            st=cn.createStatement();
            ResultSet rs=st.executeQuery(sql);
            while(rs.next()){
                datos[0]=rs.getString("id_nota");
                datos[1]=rs.getString("tipo");
                datos[2]=rs.getString("calificacion");
                
                modelo.addRow(datos);
                
            }       
            
            tabla_informacion_calificaciones.setModel(modelo);
            
        } catch (SQLException e) {
            System.err.println(e);
            JOptionPane.showMessageDialog(null,"Error al llenar la tabla de calificaciones");
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        Borrar = new javax.swing.JMenuItem();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtcalificacion = new javax.swing.JTextField();
        btnactualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_informacion_calificaciones = new javax.swing.JTable();
        btnvolver = new javax.swing.JButton();
        cbxtipo = new javax.swing.JComboBox<>();
        btnborrar = new javax.swing.JButton();
        lblinfo_alumno = new javax.swing.JLabel();

        Borrar.setText("jMenuItem1");
        Borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarActionPerformed(evt);
            }
        });
        jPopupMenu1.add(Borrar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel2.setText("Alumno:");

        jLabel3.setText("Tipo:");

        jLabel4.setText("Calificaciones:");

        btnactualizar.setText("Actualizar");
        btnactualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnactualizarActionPerformed(evt);
            }
        });

        tabla_informacion_calificaciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tabla_informacion_calificaciones.setComponentPopupMenu(jPopupMenu1);
        tabla_informacion_calificaciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabla_informacion_calificacionesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_informacion_calificaciones);

        btnvolver.setText("Volver");
        btnvolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnvolverActionPerformed(evt);
            }
        });

        cbxtipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione Tipo", "Parcial 1", "Parcial 2", "Parcial Final" }));
        cbxtipo.setEnabled(false);

        btnborrar.setText("Eliminar");
        btnborrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnborrarActionPerformed(evt);
            }
        });

        lblinfo_alumno.setFont(new java.awt.Font("Arial Black", 0, 24)); // NOI18N
        lblinfo_alumno.setText("Calificaciones");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnactualizar)
                        .addComponent(jLabel4)
                        .addComponent(jLabel2)
                        .addComponent(jLabel3)
                        .addComponent(txtcalificacion)
                        .addComponent(txtnombre)
                        .addComponent(cbxtipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnborrar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnvolver)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23))
            .addGroup(layout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(lblinfo_alumno)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(12, 12, 12)
                        .addComponent(cbxtipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtcalificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(btnactualizar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(lblinfo_alumno)
                        .addGap(43, 43, 43)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnvolver)
                    .addComponent(btnborrar))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnactualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnactualizarActionPerformed
        
        try {
            
                if(cbxtipo.getSelectedItem().equals("Seleccione Tipo")){
                    JOptionPane.showMessageDialog(null,"Escoja tipo de nota");
                    
                }
                else if(txtcalificacion.getText().isEmpty()){
                    JOptionPane.showMessageDialog(null,"Ingrese calificacion");
                    
                }
                else{
                    if(tabla_informacion_calificaciones.getSelectedRow()!=-1){
                        
                        int fila = tabla_informacion_calificaciones.getSelectedRow();
                        String idcalifi = (String)tabla_informacion_calificaciones.getValueAt(fila, 0);
                        PreparedStatement ps=cn.prepareStatement
                ("UPDATE notas SET tipo='"+cbxtipo.getSelectedItem()+"',calificacion='"+txtcalificacion.getText()+"'"
                        + "WHERE id_nota='"+idcalifi+"'");
                int respuesta=ps.executeUpdate();
                
                    if(respuesta>0){
                        
                    JOptionPane.showMessageDialog(null,"Datos Actualizados");
                    }
                    }else{
                        PreparedStatement ps=cn.prepareStatement
                ("UPDATE notas SET tipo='"+cbxtipo.getSelectedItem()+"',calificacion='"+txtcalificacion.getText()+"'"
                        + "WHERE id_nota='"+idcalifa+"'");
                int respuesta=ps.executeUpdate();
                
                    if(respuesta>0){
                        
                    JOptionPane.showMessageDialog(null,"Datos Actualizados");
                    
                
                    }
                    }
                
                }
                Informacion_calificaciones informacion_calificaciones=new Informacion_calificaciones();
                informacion_calificaciones.setVisible(true);
                dispose();
            
        } catch (SQLException e) {
            System.err.println(e);
                    JOptionPane.showMessageDialog(null,"Error al actualizar datos");
                    
               
        }
        
    }//GEN-LAST:event_btnactualizarActionPerformed

    private void BorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarActionPerformed
        
        try {
            
                if(tabla_informacion_calificaciones.getSelectedRow()!=-1){
                        
                        int fila = tabla_informacion_calificaciones.getSelectedRow();
                        String idcalifi = (String)tabla_informacion_calificaciones.getValueAt(fila, 0);
                        PreparedStatement ps=cn.prepareStatement
                ("DELETE FROM notas WHERE id_nota='"+idcalifa+"'");
                int respuesta=ps.executeUpdate();
                
                    if(respuesta>0){
                        
                    JOptionPane.showMessageDialog(null,"Datos Borrados");
                    }else{
                    
                    JOptionPane.showMessageDialog(null,"No ha seleccionado fila");
     
                }
                    }else{
                PreparedStatement ps=cn.prepareStatement("DELETE FROM notas WHERE id_nota='"+idcalifa+"'");
                
                int respuesta=ps.executeUpdate();
                
                if(respuesta>0){
                    
                   JOptionPane.showMessageDialog(null,"Datos borrados");

                }
                else{
                    
                    JOptionPane.showMessageDialog(null,"No ha seleccionado fila");
     
                }
                 
                }
                Informacion_calificaciones informacion_calificaciones=new Informacion_calificaciones();
                informacion_calificaciones.setVisible(true);
                dispose();
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_BorrarActionPerformed

    private void btnvolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnvolverActionPerformed
        Informacion_alumnos info_alumnos=new Informacion_alumnos();
        info_alumnos.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnvolverActionPerformed

    private void tabla_informacion_calificacionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_informacion_calificacionesMouseClicked
        // TODO add your handling code here:
        int fila=this.tabla_informacion_calificaciones.getSelectedRow();
        
        this.cbxtipo.setSelectedItem(this.tabla_informacion_calificaciones.getValueAt(fila,1).toString());
        this.txtcalificacion.setText(this.tabla_informacion_calificaciones.getValueAt(fila,2).toString());
    }//GEN-LAST:event_tabla_informacion_calificacionesMouseClicked

    private void btnborrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnborrarActionPerformed
        // TODO add your handling code here:
        try {
            
                if(tabla_informacion_calificaciones.getSelectedRow()!=-1){
                        
                        int fila = tabla_informacion_calificaciones.getSelectedRow();
                        String idcalifi = (String)tabla_informacion_calificaciones.getValueAt(fila, 0);
                        PreparedStatement ps=cn.prepareStatement
                ("DELETE FROM notas WHERE id_nota='"+idcalifi+"'");
                int respuesta=ps.executeUpdate();
                
                    if(respuesta>0){
                        
                    JOptionPane.showMessageDialog(null,"Datos Borrados");
                    }else{
                    
                    JOptionPane.showMessageDialog(null,"No ha seleccionado fila");
     
                }
                    }else{
                PreparedStatement ps=cn.prepareStatement("DELETE FROM notas WHERE id_nota='"+idcalifa+"'");
                
                int respuesta=ps.executeUpdate();
                
                if(respuesta>0){
                    
                   JOptionPane.showMessageDialog(null,"Datos borrados");

                }
                else{
                    
                    JOptionPane.showMessageDialog(null,"No ha seleccionado fila");
     
                }
                 
                }
                Informacion_calificaciones informacion_calificaciones=new Informacion_calificaciones();
                informacion_calificaciones.setVisible(true);
                dispose();
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnborrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Informacion_calificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Informacion_calificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Informacion_calificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Informacion_calificaciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Informacion_calificaciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Borrar;
    private javax.swing.JButton btnactualizar;
    private javax.swing.JButton btnborrar;
    private javax.swing.JButton btnvolver;
    private javax.swing.JComboBox<String> cbxtipo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblinfo_alumno;
    private javax.swing.JTable tabla_informacion_calificaciones;
    private javax.swing.JTextField txtcalificacion;
    private javax.swing.JTextField txtnombre;
    // End of variables declaration//GEN-END:variables
Conectar con=new Conectar();
    Connection cn=con.conexion();

}

